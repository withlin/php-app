name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: devops/php-app
  ECS_CLUSTER: php-app-cluster   
  ECS_SERVICE: php-app
  CONTAINER_NAME: php-app     

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Generate version tag
        id: version
        run: |
          VERSION=$(date +%Y%m%d-%H%M%S)-${GITHUB_SHA::7}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.version.outputs.version }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.ECS_SERVICE }} \
          --query 'taskDefinition | {
            family: family,
            containerDefinitions: containerDefinitions,
            executionRoleArn: executionRoleArn,
            taskRoleArn: taskRoleArn,
            networkMode: networkMode,
            volumes: volumes,
            placementConstraints: placementConstraints,
            requiresCompatibilities: requiresCompatibilities,
            cpu: cpu,
            memory: memory
          }' > task-definition.json

      - name: Update ECS task definition with new image
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            Release of version ${{ steps.version.outputs.version }}
            Deployed image: ${{ steps.build-image.outputs.image }}
          draft: false
          prerelease: false

      - name: Notify Success
        if: success()
        run: |
          aws sns publish \
            --topic-arn arn:aws:sns:ap-northeast-1:619071339509:service-alerts \
            --message "✅ 部署成功！
            仓库: ${{ github.repository }}
            版本: v${{ steps.version.outputs.version }}
            镜像: ${{ steps.build-image.outputs.image }}
            服务: ${{ env.ECS_SERVICE }}" \
            --subject "[${{ github.repository }}] 部署成功"

      - name: Notify Failure
        if: failure()
        run: |
          aws sns publish \
            --topic-arn arn:aws:sns:ap-northeast-1:619071339509:service-alerts \
            --message "❌ 部署失败！
            仓库: ${{ github.repository }}
            分支: ${{ github.ref }}
            提交: ${{ github.sha }}
            工作流: ${{ github.workflow }}
            详细信息: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --subject "[${{ github.repository }}] 部署失败警告" 